# global:
#   namespace: default
#   secretStoreRef:
#     name: "cluster-secret-store"
#     kind: ClusterSecretStore

# externalSecrets:
#   - name: tiktoken-test-credentials
#     # target:
#     #   name: tiktoken-test-secret
#     #   creationPolicy: Owner
#     dataFrom:
#       - extractKey: "tiktoken-config"  

basic-app:
  # appName: host-agent   # cluster set this value at runtime
  serviceAccount: 
    create: false 
    # name: mcp-poc  # cluster set this value at runtime

  replicaCount: 1

  # image: 042889969014.dkr.ecr.us-east-1.amazonaws.com/host_agent:20250909181710   # this value will come from application repo
  imagePullPolicy: IfNotPresent

  ports:
  - name: http
    servicePort: 8000
    containerPort: 8000

  envFrom:
    - secretRef:
        name: aws-config-secret
    - secretRef:
        name: gemini-config-secret
    - secretRef:
        name: tiktoken-config-secret
     - secretRef:
        name: hostagent-db-config-secret
  env:
    - name: SERVER_NAME
      value: "HOST_AGENT"
    - name: AGENT_NAME
      value: "HOST_AGENT"
    - name: AGENT_NAME_CONSTANT
      value: "HOST_AGENT"

  resources:
    requests:
      cpu: "20m"
      memory: "800Mi"
    limits:
      cpu: "50m"
      memory: "2048Mi"

  ingress:
    enabled: true
    hostname:
      appdomain: hostagent
      # domain: prod.yashtechai.link   # cluster set this value at runtime
    servicePort: 8000
    className: nginx
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: "500m"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
      nginx.ingress.kubernetes.io/proxy-connect-timeout: "1800"
    tls: true
    paths:
      - path: /
        pathType: Prefix

  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 75
    targetMemoryUtilizationPercentage: 80


  livenessProbe: {}
    # httpGet:
    #   path: /
    #   port: http
    # initialDelaySeconds: 10
    # periodSeconds: 5

  readinessProbe: {}
    # httpGet:
    #   path: /
    #   port: http
    # initialDelaySeconds: 5
    # periodSeconds: 3

  podSecurityContext: {}
  securityContext: {}

  imagePullSecrets: []
  nodeSelector: {}
  affinity: {}
  tolerations: []
